from aiogram.types import Message, CallbackQuery, InlineKeyboardMarkup

from .fun import is_user, get_profile, edit_last_bot_msg, is_last_bot_message, other_answer, is_admin, \
    callback_edit_profile, callback_order, callback_product, callback_filter, InlineKeyboard, callback_edit_product, \
    add_product
from .stati—Å import edit_admin, get_product, edit, order, prod


class Store:
    name = '–ù–∞–∑–≤–∞–Ω–∏–µ –º–∞–≥–∞–∑–∏–Ω–∞'
    url = '–°—Å—ã–ª–∫–∞ –Ω–∞ –º–∞–≥–∞–∑–∏–Ω'


class StaticMessage:

    async def start_msg(self, user_id: int) -> str:
        if await is_user(user_id):
            answer: str = f'–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, —ç—Ç–æ—Ç –±–æ—Ç –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω, –¥–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–æ–≤ –≤ <a href="{Store.url}">' \
                          f'{Store.name}</a>\n\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä–∏—Ç–µ —Å–ø—Ä–∞–≤–∫—É –ø–æ –±–æ—Ç—É /help'
        else:
            answer: str = f'–ò —Å–Ω–æ–≤–∞ –∑–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, –Ω–∞–ø–æ–º–∏–Ω–∞–µ–º, —á—Ç–æ —ç—Ç–æ –±–æ—Ç –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –∑–∞–∫–∞–∑—ã –≤ <a href="{Store.url}">' \
                          f'{Store.name}</a>\n\n–ß—Ç–æ –±—ã –≤—Å–ø–æ–º–Ω–∏—Ç—å –∫–æ–º–º–∞–Ω–¥—ã, –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–æ–º–º–∞–Ω–¥–æ–π /help'
        return answer

    async def help(self, user_id: int) -> str:
        help_msg: str = f'–°–ø–∏—Å–æ–∫ –∫–æ–º–º–∞–Ω–¥:\n/start - –≤ –ª—é–±–æ–π –Ω–µ–ø–æ–Ω—è—Ç–Ω–æ–π —Å–∏—Ç—É–∞—Ü–∏–∏\n/help - —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ\n' \
                        f'/settings - –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ—Ñ–∏–ª—è\n/goods - —Å–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤\n/cart - —Ç–µ–∫—É—â–∞—è –∫–æ—Ä–∑–∏–Ω–∞\n' \
                        f'/get_product - –ü–æ–∏—Å–∫ —Ç–æ–≤–∞—Ä–∞'
        if await is_admin(user_id):
            help_msg = help_msg + f'\n\n<b>–°–ø—Ä–∞–≤–∫–∞ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞</b>:\nüî¥ –î–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞ –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å ' \
                                  f'–∫–æ–º–º–∞–Ω–¥–æ–π /goods –∏ –Ω–∞–∂–º–∏—Ç–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é –∫–Ω–æ–ø–∫—É.\nüî¥ –î–ª—è —Ç–æ–≥–æ, —á—Ç–æ –±—ã ' \
                                  f'–æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Ç–æ–≤–∞—Ä –∏–ª–∏ —É–¥–∞–ª–∏—Ç—å, –Ω—É–∂–Ω–æ –æ—Ç–∫—Ä—ã—Ç—å –µ–≥–æ. –≠—Ç–æ –º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å –Ω–∞–π–¥—è ' \
                                  f'–µ–≥–æ –≤ —Å–ø–∏—Å–∫–µ —Ç–æ–≤–∞—Ä–∞ (/goods) –∏–ª–∏ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞–≤—à–∏—Å—å –ø–æ–∏—Å–∫–æ–º (/get_product).'
        return help_msg

    async def profile(self, user_id: int) -> str:
        answer: str = await get_profile(user_id)
        return answer

    async def admin(self, user_id: int) -> str:
        answer: str = '–û–∂–∏–¥–∞–Ω–∏–µ –≤–≤–æ–¥–∞'
        await edit_last_bot_msg(user_id, bot_msg=edit_admin)
        return answer

    async def goods(self, user_id: int) -> str:
        if await is_admin(user_id):
            answer: str = '–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—Ä–∏–∞–Ω—Ç:'
        else:
            answer: str = '–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∏–ª—å—Ç—Ä'
        return answer

    async def cancel_msg(self, user_id) -> str:
        await edit_last_bot_msg(user_id)
        return '–î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ'


async def answer_text(message: Message) -> Message:
    if await is_last_bot_message(message.from_user.id):
        answer: Message = await other_answer(message)
    else:
        answer: Message = await message.answer(text='–°–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–æ')
    return answer


async def callback(callback_query: CallbackQuery) -> Message:
    data: list = callback_query.data.split('-')
    if data[0] in edit:
        answer: Message = await callback_edit_profile(callback_query=callback_query)
    elif data[0] in order:
        answer: Message = await callback_order(callback_query=callback_query)
    elif data[0] in get_product:
        answer: Message = await callback_product(callback_query=callback_query)
    elif data[0] in prod[3]:
        answer: Message = await callback_filter(callback_query=callback_query)
    elif data[0] in prod[2]:
        answer: Message = await callback_edit_product(callback_query=callback_query)
    elif data[0] in prod[0]:
        answer: Message = await add_product(callback_query=callback_query)
    elif data[0] == 'no prod':
        answer: str = await StaticMessage().goods(callback_query.from_user.id)
        keyboard: InlineKeyboardMarkup = await InlineKeyboard().filter_product(callback_query.from_user.id)
        answer: Message = await callback_query.message.edit_text(text=answer, reply_markup=keyboard)


    # elif data[0] in prod[][]:
    #     answer: Message = await
    else:
        print(data)
        await callback_query.answer(text='–ù–∏—á–µ–≥–æ –Ω–µ –ø—Ä–æ–∏–∑–æ—à–ª–æ, —ç—Ç–æ info-–∫–Ω–æ–ø–∫–∞')
        answer = '–ë—ã–ª–∞ –Ω–∞–∂–∞—Ç–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω–∞—è –∫–Ω–æ–ø–∫–∞'
    return answer
